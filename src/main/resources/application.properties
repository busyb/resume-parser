server.port=8080
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
#file.upload-dir=/Users/oewumi/Documents/priceline-workspace/hackaton/HackathonQ4/resources/input_data
file.upload-dir=/resources/input_data
file.output-dir=/resources/output_data

file.python-home=/Users/oewumi/Documents/priceline-workspace/hackaton/HackathonQ4/main.py


#spring.datasource.url=jdbc:mysql://localhost:3308/resume_parser


spring.datasource.url =jdbc:h2:mem:test
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect

#`hibernate_sequence' doesn't exist
spring.jpa.hibernate.use-new-id-generator-mappings=false

# drop n create table, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=create


spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#Enabling H2 Console
spring.h2.console.enabled=true

#Custom H2 Console URL
spring.h2.console.path=/h2